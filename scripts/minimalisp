#! /usr/bin/env python2.7
# If you get an import error here, please use python >= 2.6 .
from __future__ import print_function

import os.path, fileinput, sys, argparse

try:
    import minimalisp
except ImportError:
    # in project directory: make the script work!
    sys.path.append(os.path.join(os.path.dirname(os.path.realpath(__file__)), ".."))

from minimalisp.parse import parse_program
import minimalisp.vm as vm
from minimalisp.vm import run, LispRuntimeError
from minimalisp.stdlib import stdlib

GENERAL_USAGE = """minimalisp accepts programs on stdin, or by filename."""

def parse_args(args=sys.argv[1:]):
    p = argparse.ArgumentParser(description=GENERAL_USAGE)
    p.add_argument('file', help="input file.", type=str)
    p.add_argument('-p', help="permissive mode - throws less runtime errors.", action='store_true')
    p.add_argument('-m', help="use the maths library functions.", action='store_true')
    options, extras = p.parse_known_args(args)
    return options.p, options.m, options.file

if __name__ == "__main__":
    import sys
    permissive_mode, with_math, filename = parse_args()

    if permissive_mode:
        vm.PERMISSIVE = True

    source = None
    fn = False

    if filename:
        env = os.path.abspath(filename)
        source = open(filename, 'r').read()

    if source is None:
        env = "(stdin)"
        source = '\n'.join([line for line in fileinput.input('-')])

    program = parse_program(source)

    try:
        run(program, env, with_math=with_math)
    except LispRuntimeError as e:
        print("  \033[1;31mERROR:\033[0m  %s" % e.message)
